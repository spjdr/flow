<?php defined('SYSPATH') or die('No direct script access.');class Model_Tag extends ORM {  	protected $_has_many = array( 		'events' => array('model'=>'event','through'=>'events_tags') 	); 	 	protected $_belongs_to = array( 		'flow' => array('model' => 'flow') 	); 	 	protected $_with = array( 		'flow' 	); 	 	protected $_rules = array( 		'flow_id' => array( 			'not_empty' => NULL, 			'numeric' => NULL, // ? 		), 		'title' => array( 			'not_empty' => NULL, 			'min_length' => array(1), 			'max_length' => array(255) 		),		'color' => array(			'not_empty'  => NULL,			'min_length' => array(7),			'max_length' => array(7),			'regex' => array('/#[0-9a-fA-F]{6}/')		) 	); 	public function validate_create(& $array) 	{		// Initialise the validation library and setup some rules				$array = Validate::factory($array)						->rules('flow_id', $this->_rules['flow_id'])						->rules('title', $this->_rules['title'])						->rules('color', $this->_rules['color'])						->filter('flow_id', 'trim')						->filter('title', 'trim')						->filter('color','trim');								return $array;	}		public function validate_edit(& $array)	{		// Initialise the validation library and setup some rules				$array = Validate::factory($array)						->rules('title', $this->_rules['title'])						->rules('color', $this->_rules['color'])						->filter('title', 'trim')						->filter('color','trim');						 		return $array;	}		public function render($format = 'html',$append = '')	{		switch($format)		{			case 'html';				return View::factory('models/tag/html')->bind('tag',$this)->bind('append',$append)->render();				break;			default:				return '';		}	}}