<?php defined('SYSPATH') or die('No direct script access.');class Controller_Website extends Controller_Template{	public $template = 'layouts/default';	public $auth_required = FALSE;	public $user = FALSE;	 	// Controls access for separate actions	// 'adminpanel' => 'admin' will only allow users with the role admin to access action_adminpanel	// 'moderatorpanel' => array('login', 'moderator') will only allow users with the roles login and moderator to access action_moderatorpanel	public $secure_actions = FALSE; 	/**	 * Initialize properties before running the controller methods (actions),	 * so they are available to our action.	 */		public function before()	{			// Run anything that need ot run before this.		parent::before();				I18n::lang('da-da');				// Open session		$this->session= Session::instance(); 		#Check user auth and role		$action_name = Request::instance()->action;		if (($this->auth_required !== FALSE && Auth::instance()->logged_in($this->auth_required) === FALSE)				|| (is_array($this->secure_actions) && (array_key_exists($action_name, $this->secure_actions)) && 				Auth::instance()->logged_in($this->secure_actions[$action_name]) === FALSE))		{			if (Auth::instance()->logged_in())			{				Request::instance()->redirect('noaccess');			}			else			{				Request::instance()->redirect('login');			}		}		if (Auth::instance()->logged_in())		{			$this->user = $this->session->get(Kohana::config('auth.session_key'));		}		else		{			$this->user = ORM::factory('user');			}			if ($this->auto_render)		{		   // Initialize empty values		   $this->template->title            = 'Flow';		   $this->template->meta_keywords    = 'picnic,edge,rug,software,open source,program management';		   $this->template->meta_description = 'Flow is a web platform for planning schedules and programs in development';		   $this->template->meta_copywrite   = 'Kim Lind Pedersen';		   $this->template->image_src 		 = '';		   $this->template->header           = '';		   $this->template->message 		 = $this->session->get('message',FALSE);	       $this->template->error			 = $this->session->get('error',FALSE);		   $this->template->content          = '';		   $this->template->footer           = '';		   $this->template->styles           = array('common'=>array());		   $this->template->scripts          = array();		   $this->template->username		 = $this->user->username;		}				$this->session->delete('message');		$this->session->delete('error');	}	public function action_noaccess()	{		$this->template->content = View::factory('auth/noaccess');	}		/**	 * Fill in default values for our properties before rendering the output.	 */	public function after()	{		if($this->auto_render)		{			// Define defaults			$styles['common']  = array_merge(				$this->template->styles['common'],				array(					'assets/styles/screen.css' => 'screen, projection',					'assets/styles/print.css' => 'print'				)			);						$styles['ie'] = array(				'assets/styles/stylesheets/ie.css' => 'screen, projection',			);						$scripts = array(				'http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js',				'assets/scripts/utility.js'			); 			// Add defaults to template variables.			$this->template->styles  = $styles;			$this->template->scripts = array_reverse(array_merge($this->template->scripts, $scripts));		 } 		// Run anything that needs to run after this.		parent::after();	}}