<?php defined('SYSPATH') or die('No direct script access.');class Controller_Streams extends Controller_Website {  	public function before()  	{  		$this->auth_required = 'login';  		parent::before();  	}  	  	public function action_index()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();					$this->template->title = __('Streams');		$content = $this->template->content = new View('streams/index');		$content->flow = $flow;		$content->tags = $flow->streams->find_all();  	}  	  	public function action_view()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();				$content = $this->template->content = new View('streams/view');				$content->flow = $flow;		$content->stream = $stream;		$content->events = $stream->events->find_all(); //ORM::factory('event')->where('stream_id','=',$stream->id)->find_all();  	}  	  	public function action_new()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();					$this->template->title = __('New stream');		$this->template->scripts = array('assets/colorpicker/syronex-colorpicker.js');		$this->template->styles = array('common'=>array('assets/colorpicker/syronex-colorpicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('streams/new');		$content->flow = $flow;		if ($_POST)		{				$stream = ORM::factory('stream');						$post = $_POST;			$post['flow_id'] = $flow->id;			$post = $stream->validate_create($post);						if ($post->check())			{				$stream->values($post);				var_dump('test');				$stream->save();				#add success message				$this->session->set('message',Kohana::message('streams','new_success')); 				#redirect to the new stream				Request::instance()->redirect($flow->uri.'/'.$stream->uri);			}			else			{				#general fail message				$this->session->set('error',Kohana::message('streams','new_failed'));								#Get errors for display in view				$content->errors = $post->errors('streams');				$content->post = $post;			}		}	}		public function action_edit()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();		$this->template->title = __('Edit stream');		$this->template->scripts = array('assets/colorpicker/syronex-colorpicker.js');		$this->template->styles = array('common'=>array('assets/colorpicker/syronex-colorpicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('streams/edit');		$content->flow = $flow;							$content->post = $stream->as_array();								if ($_POST)		{				$post = $_POST;			$post['flow_id'] = $stream->flow_id;			$post = $stream->validate_edit($post);						if ($post->check())			{				$stream->values($post);				$stream->save();															$this->session->set('message',Kohana::message('streams','edit_success'));	 				#redirect to the stream				Request::instance()->redirect($flow->uri.'/'.$stream->uri);			}			else			{				$this->session->set('error',Kohana::message('streams','edit_failed'));								#Get errors for display in view				$content->errors = $post->errors('stream');				$content->post = $post;			}		}	}		public function action_delete()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();				$this->template->title = __('Delete stream');		$content = $this->template->content = new View('streams/delete');		$content->flow = $flow;		$content->stream = $stream;				if ($_POST)		{				$stream->delete();						$this->session->set('message',Kohana::message('streams','delete_success')); 			#redirect to the flow			Request::instance()->redirect($flow->uri);		}	}}