<?php defined('SYSPATH') or die('No direct script access.');class Controller_Invitations extends Controller_Website {    	public function before()  	{  		$this->auth_required = 'login';  		$this->restricted_actions = array('new'=>array('master'),'delete'=>array('master'));  		parent::before();		$this->template->breadcrumbs = array();  		  		$this->template->breadcrumbs[] = html::anchor($this->flow->uri,html::chars($this->flow->title));  		  	}  	  	public function action_index()  	{  		$flow = $this->flow;					$this->template->title = __('Invitations');		$content = $this->template->content = new View('invitations/index');		$content->flow = $this->flow;		$content->invitations = $this->flow->invitations->where('accepted','<','1')->where('deleted','<','1')->find_all();		$content->access = $this->user->access[$this->flow->id];  	}  	  	public function action_new()	{		$this->template->title = __('New invitations');		$content = $this->template->content = new View('invitations/new');		$this->template->breadcrumbs[] = html::anchor($this->flow->uri.'/invitations',__('Invitations'));		$content->flow = $this->flow;		$content->email = new View('invitations/email.da');		$content->email->flow = $this->flow;		$content->email->master = $this->user;		$content->email->invitation_key = 'invitation-key';				if (isset($_POST['emails']))		{				$list = explode(' ',$_POST['emails']);						$emails = array();			foreach($list as $email)			{				if ($email = filter_var($email, FILTER_VALIDATE_EMAIL))				{					$emails[] = $email;				}			}						$errors = array();						foreach($emails as $email)			{				$invitation = ORM::factory('invitation');				$post['email'] = $email;				$post['flow_id'] = $this->flow->id;				$post['sender_id'] = $this->user->id;				$post['secret'] = uniqid();				$post = $invitation->validate_create($post);								if (!$post->check())				{					$errors[] = $email;				}				else				{					$invitation->values($post);										$to = $invitation->email;					$from = 'flow@spjdr.dk';					$title = __('Invitation to help plan').' '.html::chars($this->flow->title);										$message = new View('invitations/email.da');					$message->master = $this->user;					$message->flow = $this->flow;					$message->invitation_key = $invitation->secret;					$body = $message->render();										$mailer = Email::connect();										$message = Swift_Message::newInstance()  					// Set a subject for the email    				->setSubject($title)   					// Set a from address    				->setFrom(array('flow@spjdr.dk' => 'Flow'))				    // Set a to address, you can use data from your email_vars array here if needed.				    ->setTo(array($to))				    // Load the $body view into the email as text/html				    ->setBody($body, 'text/html');				    // Send the email					if ($mailer->send($message))					{						$invitation->save();					}					else					{						$errors[] = $email;					}				}			}						if (empty($errors))			{				$this->session->set('message',Kohana::message('invitations','new_success')); 				#redirect to the flow				Request::instance()->redirect($this->flow->uri.'/invitations');			}			else			{				$this->template->post = array('emails',implode(' ',$errors));				$this->template->errors = array('emails',Kohana::message('invitations','email_error'));			}		}	}		public function action_delete()	{		$invitation = $this->flow->invitations->find(Request::instance()->param('item'));				$this->template->title = __('Delete invitation');		$content = $this->template->content = new View('invitations/delete');		$content->flow = $this->flow;		$content->invitation = $invitation;				if ($_POST)		{				$invitation->deleted = 1;			$invitation->save();						$this->session->set('message',Kohana::message('invitations','delete_success')); 			#redirect to the flow			Request::instance()->redirect($this->flow->uri.'/invitations');		}	}}