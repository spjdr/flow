<?php defined('SYSPATH') or die('No direct script access.');class Controller_Flows extends Controller_Website {    	public function before()  	{  		$this->auth_required = 'login';  		$this->restricted_actions = array('edit'=>array('master'),'delete'=>array('master'));  		parent::before();  	}  	/**	 * Index	 */	public function action_index()	{		$this->template->content = new View('flows/index');		$this->template->content->flows = $this->user->flows->find_all();	}		public function action_view()	{		$this->template->title = $this->flow->title;		$this->template->scripts = array(			'assets/tipsy/javascripts/jquery.tipsy.js',			'assets/scrollpane/jquery.mousewheel.js',			'assets/scrollpane/jquery.jscrollpane.min.js'		);		$this->template->styles = array(			'common'=>				array(					'assets/tipsy/stylesheets/tipsy.css'=> 'screen, projection',					'assets/scrollpane/jquery.jscrollpane.css' => 'screen, projection'				)		);				$content = $this->template->content = new View('flows/view');		$content->flow = $this->flow; 		$content->access = $this->user->access[$this->flow->id]; 		$content->flow_users = ORM::factory('flow_user')->where('flow_id','=',$this->flow->id)->with('user')->order_by('master')->find_all();		$content->tags = $this->flow->tags->find_all();		$content->streams = $this->flow->streams->find_all();	}		public function action_new()	{		#Load the view		$this->template->title = __('Create new flow');		$this->template->scripts = array(			'assets/datepicker/jquery.datePicker.js',			'assets/datepicker/date.js'		);		$this->template->styles = array('common'=>array('assets/datepicker/datePicker.css'=> 'screen, projection'));		$content = $this->template->content = View::factory('flows/new'); 		#If there is a post and $_POST is not empty		if ($_POST)		{			#Instantiate a new flow			$flow = ORM::factory('flow');							#Load the validation rules, filters etc...			$post = $_POST;			$post = $flow->validate_create($post);			 			#If the post data validates using the rules setup in the flow model			if ($post->check())			{				Session::instance()->destroy('access');					#Affects the sanitized vars to the flow object				$flow->values($post); 				#create the flow				$flow->save();								#Add the user to the flow				$this->user->add('flows',$flow,array('master'=>1,'created_timestamp'=>time()));				 				#Add tags 				$tags = isset($_POST['tags']) ? array_unique($_POST['tags']) : array(); 				foreach($tags as $title) 				{ 					$tag = ORM::factory('tag'); 					$insert = array('flow_id'=>$flow->id,'title'=>$title); 					$insert = $tag->validate_create($insert); 					if ($insert->check()) 					{ 						$tag->values($insert); 						$tag->save(); 					} 				} 				 				$this->session->set('message',Kohana::message('flows','new_success')); 				#redirect to the flow				Request::instance()->redirect($flow->uri);			}			else			{				$this->session->set('error',Kohana::message('flows','new_failed'));								#Get errors for display in view				$content->errors = $post->errors('flows');				$content->post = $post;				$content->tags = isset($_POST['tags']) ? $_POST['tags'] : array();			}		}	}		public function action_edit()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();			$this->template->breadcrumbs = array(html::anchor($this->flow->uri,$this->flow->title));		$this->template->title = __('Options');		$this->template->scripts = array(url::site('assets/datepicker/jquery.datePicker.js'),url::site('assets/datepicker/date.js'));		$this->template->styles = array('common'=>array('assets/datepicker/datePicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('flows/edit');		$content->flow = $flow;			#If there is a post and $_POST is not empty		if ($_POST)		{			#Load the validation rules, filters etc...			$post = $_POST;			$post = $flow->validate_edit($_POST);			 			#If the post data validates using the rules setup in the flow model			if ($post->check())			{				#Affects the sanitized vars to the flow object				$flow->values($post); 				#create the flow				$flow->save();								$this->session->set('message',Kohana::message('flows','edit_success')); 				#redirect to the flow				Request::instance()->redirect($flow->link);			}			else			{				$this->session->set('error',Kohana::message('flows','edit_failed'));								#Get errors for display in view				$content->errors = $post->errors('flows');				$content->post = $post;			}		}	}		public function action_delete()	{			$this->template->breadcrumbs = array(html::anchor($this->flow->uri,$this->flow->title));		if ($this->flow->users->count_all() > 1) 		{			$this->template->title = __('You cannot delete the flow');			$content = $this->template->content = new View('flows/nondelete');			$content->flow = $this->flow;		}		else 		{			$this->template->title = __('Delete flow');			$content = $this->template->content = new View('flows/delete');			$content->flow = $this->flow;					if ($_POST)			{					if (!isset($_POST['delete']))				{					Request::instance()->redirect($this->flow->uri);				}								// Delete flow				$this->flow->delete();								// Remove cached access panel				$this->session->destroy('access');									// Message				$this->session->set('message',Kohana::message('flows','delete_success')); 				#redirect to index page				Request::instance()->redirect('index');			}		}	}}