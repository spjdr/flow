<?php defined('SYSPATH') or die('No direct script access.');class Controller_Tags extends Controller_Website {    	public function before()  	{  		$this->auth_required = 'login';  		$this->restricted_actions = array('new'=>array('master'),'edit'=>array('master'),'delete'=>array('master'));  		parent::before();  	}  	  	public function action_index()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();					$this->template->title = __('Tags');		$content = $this->template->content = new View('tags/index');		$content->flow = $flow;		$content->tags = $flow->tags->find_all();  	}  	  	public function action_view()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();	  	$tag = $flow->tags->find(Request::instance()->param('item'));	  				$this->template->title = ucfirst($tag->title);		$content = $this->template->content = new View('tags/view');		$content->flow = $flow;		$content->tag = $tag;  	}  	  	public function action_new()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();					$this->template->title = __('Create new tag');		$this->template->scripts = array('assets/colorpicker/syronex-colorpicker.js');		$this->template->styles = array('common'=>array('assets/colorpicker/syronex-colorpicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('tags/new');		$content->flow = $flow;				if ($_POST)		{				$post = $_POST;			$post['flow_id'] = $flow->id;			$tag = ORM::factory('tag');			$post = $tag->validate_create($post);							if ($post->check())			{				$tag->values($post);				$tag->save();			}						$this->session->set('message',Kohana::message('tags','new_success')); 			#redirect to the flow			Request::instance()->redirect($flow->uri.'/tags');		}	}		public function action_edit()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$tag = $flow->tags->find(Request::instance()->param('item'));				$this->template->title = __('Edit tag');		$this->template->scripts = array('assets/colorpicker/syronex-colorpicker.js');		$this->template->styles = array('common'=>array('assets/colorpicker/syronex-colorpicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('tags/edit');		$content->flow = $flow;		$content->tag = $tag;				if ($_POST)		{				$post = $_POST;			$post = $tag->validate_edit($post);						if ($post->check())			{				$tag->values($post);				$tag->save();															$this->session->set('message',Kohana::message('tags','edit_success'));	 				#redirect to the flow				Request::instance()->redirect($flow->uri.'/tags');			}			else			{				$this->session->set('error',Kohana::message('tags','edit_failed'));								#Get errors for display in view				$content->errors = $post->errors('flows');				$content->post = $post;			}		}	}		public function action_delete()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$tag = $flow->tags->find(Request::instance()->param('item'));				$this->template->title = __('Delete tag');		$content = $this->template->content = new View('tags/delete');		$content->flow = $flow;		$content->tag = $tag;				if ($_POST)		{				$tag->delete();						$this->session->set('message',Kohana::message('tags','delete_success')); 			#redirect to the flow			Request::instance()->redirect($flow->uri.'/tags');		}	}}