<?php defined('SYSPATH') or die('No direct script access.');class Controller_Events extends Controller_Website {  	public function before()  	{  		$this->auth_required = 'login';  		parent::before();  	}  	  	public function action_index()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('uri'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();				$this->template->title = __('Events');		$content = $this->template->content = new View('events/index');		$content->flow = $flow;		$content->stream = $stream;		$content->events = $stream->events->find_all();  	}  	  	public function action_view()  	{  		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();		$event = $stream->events->where('id','=',Request::instance()->param('event'))->find();				$content = $this->template->content = new View('events/view');				$content->flow = $flow;		$content->stream = $stream;		$content->event = $event;		$content->tags = $event->tags->find_all();  	}  	  	public function action_new()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();				$this->template->title = __('New event');		$this->template->scripts = array(url::site('assets/datepicker/jquery.datePicker.js'),url::site('assets/datepicker/date.js'));		$this->template->styles = array('common'=>array('assets/datepicker/datePicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('events/new');		$content->flow = $flow;		$content->stream = $stream;		$content->flow_tags = $flow->tags->find_all();			$content->durations = Kohana::config('event')->get('durations');		if ($_POST)		{				$event = ORM::factory('event');						$post = $_POST;			$post['stream_id'] = $stream->id;						$a = date_parse_from_format ('d/m/Y',$post['date']);			$post['timestamp'] = mktime($post['hours'], $post['minutes'], 0, $a['month'], $a['day'], $a['year']);						$post = $event->validate_create($post);						if ($post->check())			{				$event->values($post);				$event->save();								foreach($_POST['tags'] as $id=>$val)				{					$event->add('tags',ORM::factory('tag',$id));				}								#add success message				$this->session->set('message',Kohana::message('events','new_success')); 				#redirect to the new stream				Request::instance()->redirect(Route::get('event')->uri(array('flow'=>$flow->uri,'stream'=>$stream->uri,'event'=>$event->id)));			}			else			{				#general fail message				$this->session->set('error',Kohana::message('events','new_failed'));				#Get errors for display in view				$content->errors = $post->errors('events');				$content->post = array_merge($post->as_array(),array('tags'=>$_POST['tags']));			}		}	}		public function action_edit()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();		$event = $stream->events->where('id','=',Request::instance()->param('event'))->find();		$this->template->title = __('Edit event');		$this->template->scripts = array(url::site('assets/datepicker/jquery.datePicker.js'),url::site('assets/datepicker/date.js'));		$this->template->styles = array('common'=>array('assets/datepicker/datePicker.css'=> 'screen, projection'));		$content = $this->template->content = new View('events/edit');		$content->flow = $flow;		$content->stream = $stream;		$content->event = $event;		$content->durations = $event->durations;		$content->flow_tags = $flow->tags->find_all();				$event_tags = array();		foreach($event->tags->find_all() as $tag)		{			$event_tags[$tag->id] = $tag->title;		}		$content->event_tags = $event_tags;				if ($_POST)		{				$post = $_POST;						$a = date_parse_from_format ('d/m/Y',$post['date']);			$post['timestamp'] = mktime($post['hours'], $post['minutes'], 0, $a['month'], $a['day'], $a['year']);						$post = $event->validate_edit($post);						if ($post->check())			{				$event->values($post);				$event->save();								$event->remove_all_tags();								foreach($_POST['tags'] as $id=>$val)				{					$event->add('tags',ORM::factory('tag',$id));				}										$this->session->set('message',Kohana::message('events','edit_success'));	 				#redirect to the stream								Request::instance()->redirect(Route::get('event')->uri(array('flow'=>$flow->uri,'stream'=>$stream->uri,'event'=>$event->id)));			}			else			{				$this->session->set('error',Kohana::message('events','edit_failed'));								#Get errors for display in view				$content->errors = $post->errors('event');				$content->post = array_merge($post,array('tags'=>$_POST['tags']));			}		}	}		public function action_delete()	{		$flow = ORM::factory('flow')->where('uri','=',Request::instance()->param('flow'))->find();		$stream = $flow->streams->where('uri','=',Request::instance()->param('stream'))->find();		$event = $stream->events->where('id','=',Request::instance()->param('event'))->find();				$this->template->title = __('Delete event');		$content = $this->template->content = new View('events/delete');		$content->flow = $flow;		$content->stream = $stream;		$content->event = $event;				if ($_POST)		{				$event->delete();						$this->session->set('message',Kohana::message('events','delete_success')); 			#redirect to the flow			Request::instance()->redirect($flow->uri.'/'.$stream->uri);		}	}}